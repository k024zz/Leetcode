/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*, vector<ListNode*>, compare> pq;
        for(auto l : lists) {
            if(l != NULL) {
                pq.push(l);
            }
        }
        ListNode *helper, *cur;
        cur = helper = new ListNode(0);
        while(!pq.empty()) {
            ListNode* temp = pq.top();
            pq.pop();
            if(temp->next != NULL) {
                pq.push(temp->next);
            }
            cur->next = temp;
            cur = cur->next;
        }
        return helper->next;
    }
    
private:
    struct compare {
        bool operator ()(const ListNode *l1, const ListNode *l2) {
            return l1->val > l2->val;
        }
    };
};
