class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        if(matrix.empty()) return 0;
        int m = matrix.size();
        int n = matrix[0].size();
        int maxSquare = 0;
        vector<vector<int>> DP(m, vector<int>(n, 0));
        for(int i=0; i<m; i++) {
            DP[i][0] = matrix[i][0]-'0';
            maxSquare = max(maxSquare, DP[i][0]);
        }
        for(int i=0; i<n; i++) {
            DP[0][i] = matrix[0][i]-'0';
            maxSquare = max(maxSquare, DP[0][i]);
        }
        for(int i=1; i<m; i++) {
            for(int j=1; j<n; j++) {
                if(matrix[i][j] == '0') {
                    DP[i][j] = 0;
                } else {
                    DP[i][j] = min(DP[i-1][j-1], min(DP[i-1][j], DP[i][j-1]))+1;
                    maxSquare = max(DP[i][j], maxSquare);
                }
            }
        }
        return maxSquare*maxSquare;
    }
};
