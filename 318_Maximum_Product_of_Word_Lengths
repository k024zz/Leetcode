class Solution {
public:
    int maxProduct(vector<string>& words) {
        if(words.empty()) return 0;
        vector<int> flags(words.size(), 0);
        for(int i=0; i<words.size(); i++) {
            for(int c=0; c<words[i].length(); c++) {
                flags[i] |= 1 << (words[i][c] - 'a');
            }
        }
        int maxlen = 0;
        for(int i=0; i<words.size()-1; i++) {
            for(int j=i+1; j<words.size(); j++) {
                if((flags[i] & flags[j]) == 0) {
                    int len = words[i].length()*words[j].length();
                    maxlen = max(maxlen, len);
                }
            }
        }
        return maxlen;
    }
};

The run time is O(n^2).
