#include <iostream>
#include <vector>
#include <cmath>
#include <set>
#include <unordered_set>
#include <sstream>
#include <queue>
#include <map>
using namespace std;

class Solution {
public:
    int search(vector<int>& nums, int target) {
        if(nums.size() == 0) {
            return -1;
        }
        int min = findMinIndex(nums);
        int start, end;
        if(min == 0) {
            start = 0;
            end = nums.size()-1;
        } else if(target == nums[0]) {
            return 0;
        } else if(target>nums[0]) {
            start = 0;
            end = min-1;
        } else {
            start = min;
            end = nums.size()-1;
        }
        while(start<=end) {
            int mid = (start+end)>>1;
            if(nums[mid] == target) {
                return mid;
            } else if(nums[mid] > target) {
                end = mid-1;
            } else {
                start = mid+1;
            }
        }
        return -1;
    }
private:
    int findMinIndex(vector<int>& nums) {
        if(nums[0] <= nums[nums.size()-1]) {
            return 0;
        }
        int start=0;
        int end=nums.size()-1;
        while(start<end) {
            int mid=(start+end)>>1;
            if(nums[mid] < nums[0]) {
                end = mid;
            } else {
                start = mid+1;
            }
        }
        return start;
    }
};
