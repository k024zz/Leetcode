class Solution {
public:
    int maxProfit(int k, vector<int>& prices) {
        if(k==0) return 0;
        int size = prices.size();
        if(k >= size/2) return greedy(prices);
        vector<int> buy(k, INT_MIN);
        vector<int> sell(k, 0);
        for(int price : prices) {
            for(int i=k-1; i>0; i--) {
                sell[i] = max(sell[i], buy[i]+price);
                buy[i] = max(buy[i], sell[i-1]-price);
            }
            sell[0] = max(sell[0], buy[0]+price);
            buy[0] = max(buy[0], -price);
        }
        return sell[k-1];
    }
    
private:
    int greedy(vector<int>& prices) {
        int profit = 0;
        for(int i=1; i<prices.size(); i++) {
            if(prices[i] > prices[i-1]) {
                profit += prices[i] - prices[i-1];
            }
        }
        return profit;
    }
};
